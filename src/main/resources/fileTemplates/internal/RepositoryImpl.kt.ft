package ${packageName}

import kotlinx.coroutines.flow.Flow
import javax.inject.Inject

class ${className} @Inject constructor(
    private val remoteDataSource: ${returnType}Api,
    private val localDataSource: ${localDataSourceName}
): ${repositoryClass} {

    override suspend fun get${methodName}(id: Long): ${returnType} {
        TODO() // your code here
    }

    override suspend fun update${methodName}(${paramName}: ${returnType}) {
        TODO() // your code here
    }

    override suspend fun delete${methodName}(${paramName}: ${returnType}) {
        TODO() // your code here
    }

    override suspend fun add${methodName}(${paramName}: ${returnType}) {
        TODO() // your code here
    }

    override fun all(): Flow<List<${returnType}>> = localDataSource.all()
}
